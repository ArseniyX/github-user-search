{"version":3,"sources":["components/globalStyles.js","assets/icon-sun.svg","assets/icon-moon.svg","components/Themes.js","components/CardBoard.js","assets/icon-location.svg","assets/icon-website.svg","assets/icon-twitter.svg","assets/icon-company.svg","components/CardFooter.js","components/Header.js","components/CardHeader.js","utils/defaultUser.js","assets/icon-search.svg","components/SearchComponent.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","innerTextColor","background","innerSpaceBgColor","searchBoxShadow","modeImgUrl","moon","modeHoverColor","joinedDateColor","hoverImgColor","darkTheme","sun","tableArray","Table","styled","div","Column","Name","p","CardBoard","props","map","name","index","keys","Object","List","ul","Item","li","Text","span","Icon","img","StyledLink","a","isAvailable","CardFooter","obj","property","location","blog","twitter_username","company","className","src","locationIcon","alt","twitterIcon","blogIcon","style","margin","href","target","rel","companyIcon","HeaderContainer","header","Logo","h1","ModeButton","button","Header","modeState","modeChange","onClick","Container","Title","InfoImg","InfoBlock","GitHubName","h2","GitHubLogin","JoinedDate","Bio","getDateFormatted","date","arrDate","slice","split","newDate","Date","toLocaleString","month","year","CardHeader","avatar_url","html_url","login","created_at","bio","defaultUser","id","node_id","gravatar_id","url","followers_url","following_url","gists_url","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","type","site_admin","email","hireable","public_repos","public_gists","followers","following","updated_at","Search","SearchInput","input","search","SearchButton","NoResults","SearchComponent","onChangeSearch","error","onSearchButton","onChange","placeholder","Main","main","InfoContainer","App","prefersDark","window","matchMedia","matches","useState","setModeState","ghName","setGhName","data","setData","setError","click","setClick","useEffect","fetch","then","response","json","users","message","catch","e","value","textAlign","marginTop","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff06b356.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n  * {\r\n      box-sizing: border-box;\r\n      transition: all 0.50s linear;\r\n      font-family: Space Mono;\r\n  }\r\n  \r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    margin: 0 17px;\r\n    \r\n  }\r\n\r\n  `;\r\n","export default __webpack_public_path__ + \"static/media/icon-sun.f28a8996.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.cce754ce.svg\";","import sun from \"../assets/icon-sun.svg\";\r\nimport moon from \"../assets/icon-moon.svg\"\r\n\r\nexport const lightTheme = {\r\n  body: \"#F2F2F2\",\r\n  text: \"#222731\",\r\n  toggleBorder: \"#FFF\",\r\n  innerTextColor: \"#4B6A9B\",\r\n  background: \"#363537\",\r\n  innerSpaceBgColor: \"#FFF\",\r\n  searchBoxShadow: \"0px 16px 30px -10px rgba(70, 96, 187, 0.198567)\",\r\n  modeImgUrl: `${moon}`,\r\n  modeHoverColor: \"#222731\",\r\n  joinedDateColor: \"#697C9A\",\r\n  hoverImgColor: \"brightness(0%)\",\r\n  \r\n};\r\nexport const darkTheme = {\r\n  body: \"#141D2F\",\r\n  text: \"#FFF\",\r\n  toggleBorder: \"#6B8096\",\r\n  innerTextColor: \"#FFF\",\r\n  background: \"#999\",\r\n  innerSpaceBgColor: \"#1E2A47\",\r\n  searchBoxShadow: \"none\",\r\n  modeImgUrl: `${sun}`,\r\n  modeHoverColor: \"#90A4D4\",\r\n  joinedDateColor: \"#FFF\",\r\n  hoverImgColor: \"brightness(50%)\",\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst tableArray = [\"Repos\", \"Followers\", \"Following\"];\r\n\r\nconst Table = styled.div`\r\n  margin-top: 28px;\r\n  margin-left: 25%;\r\n  display: flex;\r\n  \r\n  background-color: ${({ theme }) => theme.body};\r\n  justify-content: space-around;\r\n  border-radius: 10px;\r\n  height: 85px;\r\n  min-width: 230px;\r\n  text-align: center;\r\n  flex-direction: row;\r\n  max-width: 480px;\r\n  padding: 12px 0;\r\n  @media (max-width: 800px) {\r\n    margin-top: 70px;\r\n    margin-left: 0;\r\n    max-width: 1000px;\r\n  }\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: block;\r\n  margin: 0;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nconst CardBoard = (props) => {\r\n  return (\r\n    <Table>\r\n      {tableArray.map((name, index) => {\r\n        const keys = Object.keys(props);\r\n        return (\r\n          <Column key={name}>\r\n            <Name>{name}</Name>\r\n            <p>{props[keys[index]]}</p>\r\n          </Column>\r\n        );\r\n      })}\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default CardBoard;\r\n","export default __webpack_public_path__ + \"static/media/icon-location.1237a42f.svg\";","export default __webpack_public_path__ + \"static/media/icon-website.b7923f6c.svg\";","export default __webpack_public_path__ + \"static/media/icon-twitter.d5ddd205.svg\";","export default __webpack_public_path__ + \"static/media/icon-company.6f78ffb3.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport locationIcon from \"../assets/icon-location.svg\";\r\nimport blogIcon from \"../assets/icon-website.svg\";\r\nimport twitterIcon from \"../assets/icon-twitter.svg\";\r\nimport companyIcon from \"../assets/icon-company.svg\";\r\n\r\nconst List = styled.ul`\r\n  margin-left: 25%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style-type: none;\r\n  width: calc(100% + 25px);\r\n  padding: 0;\r\n  min-width: 279px;\r\n  flex-direction: row;\r\n  max-width: 480px;\r\n\r\n  @media (max-width: 800px) {\r\n    margin-left: 0;\r\n    max-width: 1000px;\r\n  }\r\n  @media (max-width: 550px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  flex: 1 1 50%;\r\n  margin-top: 10px;\r\n  &.available {\r\n    color: ${({ theme }) => theme.innerTextColor};\r\n  }\r\n  &.not-available {\r\n    color: ${({ theme }) => theme.innerTextColor};\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  filter: brightness(0%);\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.innerTextColor};\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst isAvailable = (text) =>\r\n  text === \"Not available\" ? \"not-available\" : \"available\";\r\n\r\nconst CardFooter = (props) => {\r\n  const obj = { ...props };\r\n  for (const property in obj) {\r\n    if (obj[property] === null || obj[property] === \"\") {\r\n      obj[property] = \"Not available\";\r\n    }\r\n  }\r\n\r\n  const { location, blog, twitter_username, company } = obj;\r\n\r\n  return (\r\n    <List>\r\n      <Item className={isAvailable(location)}>\r\n        <Icon src={locationIcon} alt=\"location\" />\r\n        <Text>{location}</Text>\r\n      </Item>\r\n      <Item className={isAvailable(twitter_username)}>\r\n        <Icon src={twitterIcon} alt=\"twitter\" />\r\n        <Text>{twitter_username}</Text>\r\n      </Item>\r\n      <Item className={isAvailable(blog)}>\r\n        <Icon src={blogIcon} alt=\"blog\" />\r\n          <StyledLink style={{margin: \"10px\"}} href={blog} target={\"_blank\"} rel=\"noreferrer\">\r\n            {blog}\r\n          </StyledLink>\r\n      </Item>\r\n      <Item className={isAvailable(company)}>\r\n        <Icon src={companyIcon} alt=\"company\" />\r\n        <Text>{company}</Text>\r\n      </Item>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CardFooter;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderContainer = styled.header`\r\n  margin: 31px auto;\r\n  margin-top: calc(9% - 39px / 2 + 0.5px);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 730px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 26px;\r\n  line-height: 39px;\r\n`;\r\n\r\nconst ModeButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  border: none;\r\n  letter-spacing: 1px;\r\n  color: ${({ theme }) => theme.innerTextColor};\r\n  background-color: transparent;\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => theme.modeHoverColor};\r\n  }\r\n\r\n  &:hover::after {\r\n    filter: ${({ theme }) => theme.hoverImgColor};\r\n    transition: all 0.5s linear;\r\n  }\r\n\r\n  &::after {\r\n    content: url(${({ theme }) => theme.modeImgUrl});\r\n    margin-left: 10px;\r\n    transition: all 0.5s linear;\r\n\r\n    &:hover {\r\n      filter: ${({ theme }) => theme.hoverImgColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = ({ modeState, modeChange }) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <Logo>devfinder</Logo>\r\n      <ModeButton onClick={modeChange}>\r\n        {modeState === \"dark\" ? \"light\" : \"dark\"}\r\n      </ModeButton>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n`;\r\n\r\nconst InfoImg = styled.img`\r\n  height: 117px;\r\n  border-radius: 50%;\r\n  @media (max-width: 400px) {\r\n    height: 70px;\r\n  }\r\n`;\r\n\r\nconst InfoBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  width: 100%;\r\n  padding-left: 7%;\r\n  @media (max-width: 800px) {\r\n    position: static;\r\n  }\r\n`;\r\n\r\n// const InfoHeader = styled.div``;\r\n\r\nconst GitHubName = styled.h2`\r\nwidth: 150px;\r\n  margin-top: 0;\r\n  margin-bottom: 2px;\r\n  font-family: Space Mono;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 26px;\r\n  line-height: 39px;\r\n  @media (max-width: 400px) {\r\n    font-size: 16px;\r\n    line-height: 10px;\r\n  }\r\n`;\r\n\r\nconst GitHubLogin = styled.a`\r\n  width: 0;\r\n  color: #0079ff;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst JoinedDate = styled.p`\r\n  font-size: 15px;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  margin-top: 6px;\r\n  margin-bottom: 0;\r\n  color: ${({ theme }) => theme.joinedDateColor};\r\n  @media (max-width: 800px) {\r\n    position: static;\r\n  }\r\n`;\r\n\r\nconst Bio = styled.p`\r\n  position: static;\r\n  @media (max-width: 800px) {\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: -70px;\r\n  }\r\n`;\r\n\r\nconst getDateFormatted = (date) => {\r\n  const arrDate = date.slice(0, 10).split(\"-\");\r\n  let newDate = new Date(arrDate);\r\n  const dateFormatted = `${arrDate[2]} ${newDate.toLocaleString(\"en-us\", {\r\n    month: \"short\",\r\n    year: \"numeric\",\r\n  })}`;\r\n  return dateFormatted;\r\n};\r\n\r\nconst CardHeader = ({ avatar_url, name, html_url, login, created_at, bio }) => {\r\n  return (\r\n    <Container>\r\n      <Title>\r\n        <InfoImg src={avatar_url} alt={\"github image\"} />\r\n        <InfoBlock>\r\n          <GitHubName>{name}</GitHubName>\r\n\r\n          <GitHubLogin href={html_url} target=\"_blank\" rel=\"noreferrer\">\r\n            @{login}\r\n          </GitHubLogin>\r\n\r\n          <JoinedDate>Joined {getDateFormatted(created_at)}</JoinedDate>\r\n          <Bio>{bio === null ? \"This profile has no bio\" : bio}</Bio>\r\n        </InfoBlock>\r\n      </Title>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardHeader;\r\n","const defaultUser = {\r\n  login: \"octocat\",\r\n  id: 583231,\r\n  node_id: \"MDQ6VXNlcjU4MzIzMQ==\",\r\n  avatar_url: \"https://avatars.githubusercontent.com/u/583231?v=4\",\r\n  gravatar_id: \"\",\r\n  url: \"https://api.github.com/users/octocat\",\r\n  html_url: \"https://github.com/octocat\",\r\n  followers_url: \"https://api.github.com/users/octocat/followers\",\r\n  following_url: \"https://api.github.com/users/octocat/following{/other_user}\",\r\n  gists_url: \"https://api.github.com/users/octocat/gists{/gist_id}\",\r\n  starred_url: \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\r\n  subscriptions_url: \"https://api.github.com/users/octocat/subscriptions\",\r\n  organizations_url: \"https://api.github.com/users/octocat/orgs\",\r\n  repos_url: \"https://api.github.com/users/octocat/repos\",\r\n  events_url: \"https://api.github.com/users/octocat/events{/privacy}\",\r\n  received_events_url: \"https://api.github.com/users/octocat/received_events\",\r\n  type: \"User\",\r\n  site_admin: false,\r\n  name: \"The Octocat\",\r\n  company: \"@github\",\r\n  blog: \"https://github.blog\",\r\n  location: \"San Francisco\",\r\n  email: null,\r\n  hireable: null,\r\n  bio: null,\r\n  twitter_username: null,\r\n  public_repos: 8,\r\n  public_gists: 8,\r\n  followers: 4015,\r\n  following: 9,\r\n  created_at: \"2011-01-25T18:44:36Z\",\r\n  updated_at: \"2021-09-22T14:27:38Z\",\r\n};\r\n\r\nexport default defaultUser","export default __webpack_public_path__ + \"static/media/icon-search.0cc0c984.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport search from \"../assets/icon-search.svg\";\r\n\r\nconst Search = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  height: 69px;\r\n  width: 100%;\r\n\r\n  padding: 18px 50px;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n\r\n  font-family: Space Mono;\r\n  font-size: 18px;\r\n  line-height: 25px;\r\n  box-shadow: ${({ theme }) => theme.searchBoxShadow};\r\n  border: none;\r\n  border-radius: 15px;\r\n\r\n  /* identical to box height, or 192% */\r\n\r\n  color: ${({ theme }) => theme.innerTextColor};\r\n  background: ${({ theme }) => theme.innerSpaceBgColor} url(${search}) no-repeat\r\n    scroll 13px 50%;\r\n  outline: none;\r\n\r\n  &::placeholder {\r\n    opacity: 0.8;\r\n    word-spacing: 0px;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    font-size: 13px;\r\n    height: 60px;\r\n    padding: 18px 45px;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  height: 50px;\r\n  width: 106px;\r\n\r\n  position: absolute;\r\n  top: 15%;\r\n  right: 10px;\r\n  background: #0079ff;\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  border: none;\r\n  word-spacing: 10px;\r\n\r\n  color: #fff;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: #60abff;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    width: 84px;\r\n    height: 46px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst NoResults = styled.span`\r\n  position: absolute;\r\n\r\n  top: 35%;\r\n  right: 130px;\r\n  line-height: 24px;\r\n  font-family: Space Mono;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  line-height: 22px;\r\n\r\n  color: #f74646;\r\n`;\r\n\r\n\r\nconst SearchComponent = ({onChangeSearch, error, onSearchButton}) => {\r\n  return (\r\n    <Search>\r\n      <SearchInput\r\n        onChange={onChangeSearch}\r\n        placeholder=\"Search GitHub username...\"\r\n      />\r\n      {error && <NoResults>No results</NoResults>}\r\n      <SearchButton onClick={onSearchButton}>Search</SearchButton>\r\n    </Search>\r\n  );\r\n};\r\n\r\nexport default SearchComponent;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/globalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\nimport CardBoard from \"./components/CardBoard\";\nimport CardFooter from \"./components/CardFooter\";\nimport Header from \"./components/Header\";\nimport CardHeader from \"./components/CardHeader\";\nimport defaultUser from \"./utils/defaultUser\";\nimport SearchComponent from \"./components/SearchComponent\";\nimport { StyledLink } from \"./components/CardFooter\";\n\nconst Main = styled.main`\n  width: 100%;\n  margin: 0 auto;\n  max-width: 730px;\n`;\n\nconst InfoContainer = styled.div`\n  padding: 6%;\n  display: flex;\n  flex-direction: column;\n  margin: 24px auto;\n  background: ${({ theme }) => theme.innerSpaceBgColor};\n  box-shadow: 0px 16px 30px -10px rgba(70, 96, 187, 0.198567);\n  border-radius: 15px;\n  @media (min-width: 768px) {\n  }\n`;\n\nconst App = () => {\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const [modeState, setModeState] = useState(prefersDark ? \"dark\" : \"light\");\n  const [ghName, setGhName] = useState(null);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(false);\n  const [click, setClick] = useState(\"\");\n\n  const onSearchButton = () => {\n    if (click !== ghName && ghName !== null) setClick(ghName);\n  };\n\n  if (data === null) setData(defaultUser);\n\n  useEffect(() => {\n    if (click !== \"\") {\n      fetch(`https://api.github.com/users/${click}`)\n        .then((response) => response.json())\n        .then((users) => {\n          users.message !== \"Not Found\" ? setData(users) : setError(true);\n        })\n        .catch((error) => {\n          throw error;\n        });\n    }\n  }, [click]);\n\n  const themeToggler = () => {\n    modeState === \"light\" ? setModeState(\"dark\") : setModeState(\"light\");\n  };\n\n  const onChangeSearch = (e) => {\n    setError(false);\n    setGhName(e.target.value);\n  };\n\n  const {\n    avatar_url,\n    name,\n    html_url,\n    created_at,\n    login,\n    bio,\n    public_repos,\n    followers,\n    following,\n    location,\n    blog,\n    twitter_username,\n    company,\n  } = data !== null ? data : \"\";\n\n  return (\n    <ThemeProvider theme={modeState === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <>\n        <Header modeState={modeState} modeChange={themeToggler} />\n        <Main>\n          <SearchComponent\n            onChangeSearch={onChangeSearch}\n            error={error}\n            onSearchButton={onSearchButton}\n          />\n\n          <InfoContainer>\n            <CardHeader\n              avatar_url={avatar_url}\n              name={name}\n              html_url={html_url}\n              bio={bio}\n              login={login}\n              created_at={created_at}\n            />\n            <CardBoard\n              public_repos={public_repos}\n              followers={followers}\n              following={following}\n            />\n            <CardFooter\n              location={location}\n              blog={blog}\n              twitter_username={twitter_username}\n              company={company}\n            />\n          </InfoContainer>\n        </Main>\n        <footer style={{ textAlign: \"center\", marginTop: \"35px\" }}>\n          <div style={{ color: \"grey\" }}>\n            Challenge by{\" \"}\n            <StyledLink\n              href=\"https://www.frontendmentor.io?ref=challenge\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              Frontend Mentor\n            </StyledLink>\n            . Coded by{\" \"}\n            <StyledLink\n              href=\"https://github.com/ArseniyX/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              ArseniyX\n            </StyledLink>\n            .\n          </div>\n        </footer>\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}